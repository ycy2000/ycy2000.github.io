
var 변수=[1,2,'3',3,'문자']; 변수[5]는 없는데...undefined, false 조건

  3   : console.log(변수[0]+변수[1]);		문자 : console.log(변수[4]);

  23  : console.log(변수[1]+변수[2]);		NaN  : console.log(변수[4]*1);

  5   : console.log(변수[1]*1+변수[2]*1);	NaN3 : console.log(변수[4]*1+변수[2]); NaN+문자3

  NaN : console.log(변수[4]*1); false조건	NaN  : console.log(변수[4]*1+변수[2]*1); NaN에 숫자를 더하여도 NaN

  5   : console.log(변수[1]+Number(변수[2])); 	NaN  : console.log(변수[4])); 변수[4])*1 도 같은 결과
 
-----------------------------------------------------------------------------------------------

  var 변수=[];  변수.push(1);  변수.push('1');  변수.push(2);  변수=[1,'1',2] ==> 3 : console.log(변수[0]+변수[2]);

-----------------------------------------------------------------------------------------------
  
문자열 '12.99'를 parseInt(string, radix);  radix : optional, string 문자열을 읽을 진법, 2~36의 수, 생략시 10진수

parseInt("10n"); // 10    parseInt("10nnn13"); // 10

parseInt("    10"); // 10   문자열의 첫글자는 반드시 숫자여야 하지만, 처음에 오는 공백 문자는 허용됩니다.
 
parseInt("10      "); // 10   문자열의 첫글자가 숫자이면, 뒤에 오는 공백은 무시됩니다.
 
parseInt("k10"); // NaN   문자열의 첫글자가 숫자가 아니면, NaN(Not a Number)를 리턴합니다.
 
parseInt(""); // NaN

-----------------------------------------------------------------------------------------------

Math.ceil() : 소수점 이하 숫자를 올림하여 정수를 리턴합니다.

Math.floor() : 소수점 이하 숫자를 버림하여 정수를 리턴합니다.

Math.round() : 소수점 이하 숫자를 반올림하여 정수를 리턴합니다.

-----------------------------------------------------------------------------------------------
  
Number.toFixed()로 소수점 자리수 제거(n자리로 반올림)

Number.toFixed(n)는 숫자를 소수점 n자리로 반올림합니다. n자리 이후의 숫자를 제거할 수 있습니다.

const num1 = 1.1234;
const num2 = 12.5678;
const num3 = 123.5678;

console.log(num1.toFixed(2));   // 1.12
console.log(num2.toFixed(2));   // 12.57
console.log(num3.toFixed(2));   // 123.57
  
  