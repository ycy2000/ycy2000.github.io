https://ibrahimovic.tistory.com/56


속성부여는 setProperty()를 사용해보자

document.body.style.setProperty('color', 'lime');

document.querySelector('#덩어리이동5개textarea').style.setProperty('top', '1026px');


1. element.style을 통한 인라인 스타일

   document.body.style.background = 'tomato';   document.body.style.padding = '100px';

   element.style 을 이용하면 쉽게 CSS 속성과 값을 선언할 수 있지만, 한가지 문제점이 있다. 

   오직 인라인 스타일에만 적용된다는 점이다. ★인라인 style에 속성이 없으면 공백을 반환한다.★

2. 계산된(computed) 스타일 가져오기 : 현재 상태의 모든것을 다고 있다.

   window.getComputedStyle(document.body).font;

   window.getComputedStyle(el).getPropertyValue('background-color'); //설정된 값

   window.getComputedStyle() 메소드에 두번째 인자를 전달하면 가상 요소의 속성에 접근할 수 있다.

   .box::before {display: block; width: 50px;content: 'Example'; }

   let box = document.querySelector('.box');   

   window.getComputedStyle(box, '::before').width; // '50px'

3. setProperty(), getPropertyValue(), item(), removeProperty()- setProperty() : 설정, 2개의 인자 (속성,값)

   - getProperty() : 가져오기, 1개의 인자

   - item() : 가져오려는 속성의 인덱스를 인자로 사용

   - removeProperty() : 삭제


   // 설정(set)

   document.body.style.setProperty('color', 'lime');

   document.body.style.setProperty('font-size', '16px'); // - 를 사용한것에 주목!
         

   // 읽기(get)
          
   document.body.style.getPropertyValue('color'); // 'lime'
        

   // item() 이용, 인자값은 인덱스 숫자

   document.body.style.item(0) // 'color'

   document.body.style.item(1) // 'font-size'
        

   // 제거(remove), 제거 후에는 빈 문자열을 반환한다.
        
   document.body.style.removeProperty('color') // 'lime'
        
   document.body.style.item(1) // ''

