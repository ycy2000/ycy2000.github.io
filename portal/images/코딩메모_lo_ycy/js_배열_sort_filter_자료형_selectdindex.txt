------------------------------------------------------------------------------------------------------------------------------------------------
<select><option></option></select> 
 selectedIndex
1) select 안에 option이 없으면 : -1
2) select 안에 option이 있으면 : 0 (첫번째꺼 선택상태 : select안에 innerHTML로 option 전달시)
 var selectedindex=document.querySelector('#회차select').selectedIndex;
 alert(selectedindex);


[자료형관련] [배열생성,추가,삭제,정렬] [배열값 개수, filter] [포함하는지 확인 includes()]
1) 배열생성,추가,자료형식,정렬
  var 배열=[]; //빈배열 선언
  배열=[12,"13",1,"2"]; //배열값 생성, 직접입력
  배열.push(14); //배열추가, 기존배열 마지막에 삽입하면서 추가
  배열.push("14"); 
  배열.push("15"); 
  // 12,13,1,2,14,14,15
  //== : Number형식이든, String형식이든 같은숫자면 true
  //=== : 같은숫자라도 형식도 일치해야 true
  //배열[4] : 숫자 14, 배열[5] : 문자 14
  alert("== : 값만일치시 true, === : 값과 형식이 모두 일치시 true"
   + "\n배열[5]는 문자형식 14"
   + "\nif (배열[5]==14) : 배열은숫자, 우측은 문자, 형식구분X : TRUE\n"
   + "if (!(배열[5]===14)) : 형식구분O : FALSE");
  //★배열안의 값들은 문자 또는 숫자가 있더라도 정렬하면 모든 값들을 문자열로 인식하며 정렬한다!!
  // 배열.sort(); 오름차순정렬. 숫자를 제대로 정렬하려면 ★★ 배열.sort((a,b) => b-a);
  alert('sort() 사용시 배열속 모든 값을 문자열로 인식하여 정렬한다!!'
  + '\n원래배열 : ' + 배열 + '\n배열.sort() : ' + 배열.sort()
  + '\n오름차순 배열.sort((a,b) => a-b) : ' + 배열.sort((a,b) => a-b)
  + '\n내림차순 배열.sort((a,b) => b-a) : ' + 배열.sort((a,b) => b-a)
  );
2) 자료형식이 다르면 같은값이 아니다.
3) 배열 : 중복제거 ==> [...new Set(배열)] 
  var 배열=[]; //빈배열 선언
  배열.push(1);
  배열.push(1);
  배열.push(1);
  배열.push('1');
  배열.push(2);
  배열.push('2');
  var 중복제거=[...new Set(배열)];
  alert(중복제거);

4) 조건에 맞는 새로운 배열 : 배열.filter(조건식) ==> 구문자체는 새로운 배열이다.
   조건식 (현재배열값,비교할배열값) => 조건 == i) : 조건==i 형식안봄, 조건===i 형식 봄
   현재배열값(index값), 비교할배열값(index값)은 임의의 변수를 넣으면 된다.

   예시) indexOf() 활용은 보기만하고 필요할때 공부하자.
         let result = array.filter((v, i) => array.indexOf(v) === i);

         v당 i는 모든 배열을 순환하면서 확인한다??

         array.indexOf(v) : v(현재배열값)를 가진 첫번째 index === i 비교하고 있는 값과 같다면 (값과 인덱스가 같다면 => 한번만)

5) ★★이부분 사용 : filter결과 없어도 에러 아니다. 없을때 length=0
   ★★includes가 형식을 확인하므로 filter 활용

   조건에 맞는 새로운 배열 : 배열.filter(조건식) ==> 구문자체는 새로운 배열이다.
   조건식 (현재배열값,비교할배열값) => 조건 == i) : 조건==i 형식안봄, 조건===i 형식 봄
   현재배열값(index값), 비교할배열값(index값)은 임의의 변수를 넣으면 된다.

  var 배열=[1,1,1,'1','1',12,'12','12',9,'9','9']; 
  alert('배열 : ' + 배열 + '\n배열:숫자1=3, 문자1=2, 숫자12=1,문자12=2,숫자9=1,문자9=2 개');

  alert('숫자1 3개 filter 추출 구문 : \n' + '배열.filter((a,b) => a === 1)\n' + 배열.filter((a,b) => a === 1)
  + '\n숫자1 형식구분없으면 5개 filter 추출 구문 : \n' + '배열.filter((a,b) => a == 1)\n' + 배열.filter((a,b) => a == 1)
  );

  alert('보다크다 보다작다는 형식구분 않는다\n' 
  + '숫자1 보다크고 9보가 같거나 작은것 filter 추출 구문 : \n' 
  + '배열.filter((a,b) => (a > 1) && (a<=9))\n' + 배열.filter((a,b) => (a > 1) && (a<=9))
  );

6) 포함하는지 확인 : 배열.includes(값) => true, false 반환 : ★형식도 본다.







 



